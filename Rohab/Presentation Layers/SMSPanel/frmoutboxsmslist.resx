<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACw8AAAsPAZL5A6UAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8
        AAAENElEQVR4Xu2a71ITVxjGT0KgQDukA0bLtDYzYtXWD37oBZxL8BK8FC6BT2BbRlfHEQWRVPG/1n/0
        O9+Bqi1jxWCy+XMBr8+70RmG7Nnsie/uspnszG+A5Jznfc6TsJvzZpXqH/0E+gn0E+gn0E8gkQRO/93U
        TCLFky56aq3p/LzWJIZ/T9pPrPV/etFwTrxo0F74sVhNJFXs2LOGM/WsQX7wc0n5iqVu8WnDAdSB3gzh
        hyd1B1BIeiuEyUd1Z/JxnazAnFjellEXKTysOYcf1qgbeG7U/iLVH79fcybu1+hLYI1ITUYlnr9Xc769
        VyMJWCsqn5HofnPHdQAJk44QRm67zsiqS5EA7UheMSnRoVuuAyhiDmYIA6XqDKCYmJF60WR0blbyaqVC
        sSLjXEiFA1j+sA4oJtaFnEcgc+ODVvtZ2j2nlnbJihu7Z9t0WDe1x/X3pGxI7UJNxhd2SNnQcwFc/Z+U
        DT0XwJW3pGzouQAub5OyoecCcP4jZcNBDAAt7PznVvann/z3/se8Vvce8t5aLrwhKzAljLbPmGIk2Z16
        2Zz+3Mbe81OffNlgKIDWtXv+NVmBKWG04UXv98VeRUNAt7Y49Ryd3Hb00b/qDAXQCuD3f8gKTAmjDU/a
        zxs8t955EsePWCQgH/ShBzWGAmgF8NsWWYEpYbSDvEms3dP47lFdA/JBj666DJlAX6D1dpzbnFZzGxQO
        jMXBc4O0uXaQN7EAJvAqA/JBZ1aqDJmpuOpm5Yy1GczJrFTcYO0q+zJ6s65pmjB219WAfNBqscxQINfL
        rrr2flpd29HhwFie00kXtQO9SSUwfNvVgHzQ+HTH2H3KkxvPvszepAJAl0cbOj1aXfyXoYRgX2ZvUgGo
        5YoGaHa0odX8qzzO7q7VGd72iuA/3vVqB3kTC8D8f17yasxu5IGOmdZ1frFcMpwrBJsnCzh5Gffy70rq
        6judCAuobe4xCAaQ7Imu2xOsYACXtrW6hO1suhAM4MIbbbWTs935RTNeMID513n1xytKGcLb4vNb0+r8
        JqUDeI3kmN0oxnyp6+bSKrcNjiTEtIqiyzKJzsuvaYC9iuaM7sogui5n0oRoAOi6jILTaUI0AHRdRsDJ
        NCEaALouw2AqTYgGgK7LV6BooIA7wYaTAH4KJl+iAeDGpyHwvQ8TooW6EIOnCT9vXUiZp6DrMgiO7Cf3
        ZzV3/Hkjgy8wCuBIzBTYscmbaADouuTAeBuogitDDowngbfIAG9yISyWB9B1GWsDFfDlxQAYS4JPHSGj
        N7kAFnay6LyMtoEKX6+6WTDaCdw1Ojh2tzYQBh7bSY+f9xYY4E0ugCtvM2h9D7WBCtmVagYMBZErVTO2
        ZnhOJ11PM8CbbU3z+MvbCjc3ZNvgGYtlJmtkaddbPPYQ6pe1ZjYMPNY7eG6QNo8J8iaXQF+pn0CvJvAR
        dh+8Q8bF2C8AAAAASUVORK5CYII=
</value>
  </data>
</root>